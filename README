HydroJS was the first
then Hydro, a C++/multithread version of HydroJS
then HydroGPU, a OpenCL version of Hydro
then with Lua script config, 
then the Lua got out of hand until the C++ was doing nothing but managing strings
now this project, lua-hydro-cl, pushes the middleman (C++) out completely


Features:
- Roe solver in 1D, 2D, 3D
- various flux limiters
- various boundary conditions
- script-generated OpenCL code regenerated on the fly as soon as you change GUI options
- GUI-driven everything.  no more restarting the program to switch solvers.
- Euler equations, in 1D and 3D, from Toro's book
- ADM in 1D via the Bona-Masso formalism described in Alcubierre 1997 and Alcubierre's 2008 book
- Maxwell equations from Trangenstein's book

BUGS:
- MHD isn't working with magnetic fields ... even though I copied the code from two different working solvers I have - gravitational-wave-sim and HydroGPU

TODO:
- get two-fluid EMHD working
- get potential forces for Euler equations working
- get self-gravitation for Euler equations working
- implement Navier-Stokes
- rename 'adm_' prefixes to 'nr_' or 'gr_' or something else ...
- higher-order polynomial stuff - WENO or whatever
- initialize NR stuff to the geometry metric
- add GR+HD by taking the SRHD and giving it the metric from GR (adm solver)
- add EM+SRHD by mixing and matching SRHD and EMHD
- add EM+GR+HD by winning
